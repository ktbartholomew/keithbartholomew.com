name: Build and Deploy

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    - uses: actions/cache@v4
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - run: npm ci
    - run: npm run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::654654582724:role/GitHubDeploy

    - name: Upload functions and files
      run: npm run publish

    - name: Deploy CloudFormation
      run: aws cloudformation deploy  --stack-name keithbartholomew-com-site --template-file ./cloudformation/keithbartholomew.yml --capabilities CAPABILITY_NAMED_IAM --parameter-overrides ArtifactsVersion=$(git rev-parse HEAD)

    - name: Invalidate CloudFront cache
      run: aws cloudfront create-invalidation --distribution-id E3OCEZKORIM1YH --paths "/*"
